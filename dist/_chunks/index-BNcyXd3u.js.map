{"version":3,"file":"index-BNcyXd3u.js","sources":["../../admin/src/pluginId.ts","../../admin/src/components/Initializer/index.tsx","../../admin/src/components/PluginIcon/index.tsx","../../admin/src/utils/getTrad.ts","../../admin/src/utils/generate-styles.ts","../../admin/src/index.ts"],"sourcesContent":["import pluginPkg from \"../../package.json\";\n\nconst pluginId = pluginPkg.strapi.name;\n\nexport default pluginId;\n","/**\n *\n * Initializer\n *\n */\n\nimport { useEffect, useRef } from 'react';\nimport pluginId from '../../pluginId';\n\ntype InitializerProps = {\n  setPlugin: (id: string) => void;\n};\n\nconst Initializer = ({ setPlugin }: InitializerProps) => {\n  const ref = useRef(setPlugin);\n\n  useEffect(() => {\n    ref.current(pluginId);\n  }, []);\n\n  return null;\n};\n\nexport default Initializer;\n","/**\n *\n * PluginIcon\n *\n */\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { PinMap } from \"@strapi/icons\";\n\nconst StyledPinMap = styled(PinMap)`\n  path {\n    fill: ${({ theme }) => theme.colors.primary500};\n  }\n`;\n\nconst PluginIcon = () => <StyledPinMap />;\n\nexport default PluginIcon;\n","import pluginId from \"../pluginId\";\n\nconst getTrad = (id: string) => `${pluginId}.${id}`;\n\nexport default getTrad;\n","const classNames = `.leaflet-control-container .leaflet-top,\n.leaflet-control-container .leaflet-bottom {\n  transform: translate3d(0px, 0px, 0px);\n}\n.leaflet-container {\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n}\n\n.leaflet-control {\n  z-index: 0 !important;\n}\n.leaflet-pane {\n  z-index: 0 !important;\n}\n.leaflet-top,\n.leaflet-bottom {\n  z-index: 0 !important;\n}`;\n\nconst generateStyles = () => {\n  const style = document.createElement(\"style\");\n  style.textContent = classNames;\n  document.head.appendChild(style);\n};\n\nexport default generateStyles;\n","import { prefixPluginTranslations } from \"@strapi/helper-plugin\";\n\nimport pluginPkg from \"../../package.json\";\nimport pluginId from \"./pluginId\";\nimport Initializer from \"./components/Initializer\";\nimport PluginIcon from \"./components/PluginIcon\";\nimport getTrad from \"./utils/getTrad\";\nimport \"@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css\";\nimport \"leaflet-defaulticon-compatibility\";\nimport generateStyles from \"./utils/generate-styles\";\n\nconst name = pluginPkg.strapi.displayName;\n\nexport default {\n  register(app: any) {\n    console.log(app);\n    app.createSettingSection(\n      {\n        id: `${pluginId}-label`,\n        intlLabel: {\n          id: getTrad(\"settings.section-label\"),\n          defaultMessage: name,\n        },\n      }, // Section to create\n      [\n        // links\n        {\n          intlLabel: {\n            id: getTrad(\"settings.link-label\"),\n            defaultMessage: \"Configuration\",\n          },\n          id: `${pluginId}-link-label`,\n          to: `/settings/${pluginId}`,\n          Component: async () => {\n            const component = await import(\n              /* webpackChunkName: \"settings-page\" */ \"./pages/Settings\"\n            );\n\n            return component;\n          },\n          permissions: [\n            { action: `plugin::${pluginId}.config`, subject: null },\n          ],\n        },\n      ]\n    );\n\n    app.customFields.register({\n      name: \"geojson\",\n      pluginId, // the custom field is created by plugin\n      type: \"json\", // the color will be stored as a json\n      intlLabel: {\n        id: getTrad(\"input.label\"),\n        defaultMessage: name,\n      },\n      intlDescription: {\n        id: getTrad(\"input.description\"),\n        defaultMessage: \"Draw/pick your location\",\n      },\n      icon: PluginIcon, // don't forget to create/import your icon component\n      // components: {\n      //   Input: async () =>\n      //     import(\n      //       /* webpackChunkName: \"input-component\" */ \"./components/Input\"\n      //     ),\n      // },\n      components: {\n        Input: async () => import(\"./components/Input\"),\n      },\n      options: {\n        advanced: [\n          {\n            name: \"optionsLatitude\",\n            type: \"string\",\n            intlLabel: {\n              id: getTrad(\"attribute.item.defaultLat\"),\n              defaultMessage: \"Default latitude\",\n            },\n          },\n          {\n            name: \"optionsLongitude\",\n            type: \"string\",\n            intlLabel: {\n              id: getTrad(\"attribute.item.defaultLng\"),\n              defaultMessage: \"Default longitude\",\n            },\n          },\n          {\n            name: \"optionsZoom\",\n            type: \"number\",\n            intlLabel: {\n              id: getTrad(\"attribute.item.defaultZoom\"),\n              defaultMessage: \"Default Zoom Level\",\n            },\n          },\n          {\n            name: \"optionsTileURL\",\n            type: \"string\",\n            intlLabel: {\n              id: getTrad(\"attribute.item.defaultTileURL\"),\n              defaultMessage: \"Tile URL\",\n            },\n          },\n          {\n            name: \"optionsTileAttribution\",\n            type: \"string\",\n            intlLabel: {\n              id: getTrad(\"attribute.item.defaultTileAttribution\"),\n              defaultMessage: \"Tile Attribution\",\n            },\n          },\n          {\n            name: \"optionsTileAccessToken\",\n            type: \"string\",\n            intlLabel: {\n              id: getTrad(\"attribute.item.defaultTileAccessToken\"),\n              defaultMessage: \"Tile Access Token\",\n            },\n          },\n          {\n            sectionTitle: {\n              id: \"global.settings\",\n              defaultMessage: \"Settings\",\n            },\n            items: [\n              {\n                name: \"required\",\n                type: \"checkbox\",\n                intlLabel: {\n                  id: \"form.attribute.item.requiredField\",\n                  defaultMessage: \"Required field\",\n                },\n                description: {\n                  id: \"form.attribute.item.requiredField.description\",\n                  defaultMessage:\n                    \"You won't be able to create an entry if this field is empty\",\n                },\n              },\n            ],\n          },\n        ],\n      },\n    });\n\n    const plugin = {\n      id: pluginId,\n      initializer: Initializer,\n      isReady: true,\n      name,\n    };\n\n    app.registerPlugin(plugin);\n  },\n\n  bootstrap(app: any) {\n    generateStyles();\n  },\n\n  async registerTrads(app: any) {\n    const { locales } = app;\n\n    const importedTrads = await Promise.all(\n      (locales as any[]).map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, pluginId),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],"names":["useRef","useEffect","styled","PinMap","jsx","prefixPluginTranslations"],"mappings":"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"}